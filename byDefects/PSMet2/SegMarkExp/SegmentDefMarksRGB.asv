function [] = SegmentDefMarksRGB(nombreImagenSegmentar, nombreImagenDEFROI, nombreImagenSalida, channel1Min, channel1Max, channel2Min, channel2Max, channel3Min, channel3Max)
% ########################################################################
% Project AUTOMATIC CLASSIFICATION OF ORANGES BY SIZE AND DEFECTS USING 
% COMPUTER VISION TECHNIQUES 2018
% juancarlosmiranda81@gmail.com
% ########################################################################
%
% Project: AUTOMATIC CLASSIFICATION OF ORANGES BY SIZE AND DEFECTS USING 
% COMPUTER VISION TECHNIQUES
%
% Author: Juan Carlos Miranda. https://github.com/juancarlosmiranda/
% Date: 2018
% Update:  December 2023
%
% Description:
%
% Extracts the masks painted by the expert using the value segmentation technique in the RGB space.
% Usage:
%
% SegmentDefMarksRGB(maskImage, imageNameDEFROI, imageNameDEFROIBin, 
rChannelMin, rChannelMax, gChannelMin, gChannelMax, bChannelMin, bChannelMax);

%------------------------------------------------------

RGB=imread(nombreImagenSegmentar);

% Convert RGB image to chosen color space
I = RGB;

% Create mask based on chosen histogram thresholds
BW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

nivel=graythresh(maskedRGBImage(:,:,3)); %umbral colocado en base a la experiencia
IB2=im2bw(maskedRGBImage(:,:,3),nivel);

%% Almacenar en archivos las imagenes de clusteres
imwrite(maskedRGBImage,nombreImagenDEFROI,'jpg');
imwrite(IB2,nombreImagenSalida,'jpg');
end

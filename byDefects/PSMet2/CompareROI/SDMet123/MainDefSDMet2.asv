%
% Project: AUTOMATIC CLASSIFICATION OF ORANGES BY SIZE AND DEFECTS USING
% COMPUTER VISION TECHNIQUES
%
% Author: Juan Carlos Miranda. https://github.com/juancarlosmiranda/
% Date: 2018
% Update:  December 2023
%
% Description:
%
% Data obtained after applying a segmentation method is generated and a
% pre-trained defect classifier. In the end you get a list with the 
% classifications of what was detected.
%
% Se generan datos obtenidos luego de aplicar un método de segmentación y
% un clasificador de defectos previamente entrenado. Al final se obtiene un
% listado con las clasificaciones de lo detectado.
%
% Usage:
% MainDefSDMet2.m
%
%


%% Initial parameter setting
clc; clear all; close all;
 
%% Setting script operating parameters
HOME=fullfile('C:','Users','Usuari','development','orange_classification');
mainPath=fullfile(HOME,'OrangeResults/byDefects/PSMet2/CompareROI/'); %
pathImages=fullfile(HOME,'OrangeResults/inputToLearn/');
configurationPath=fullfile(mainPath,'conf/');
pathAplicacion=fullfile(mainPath,'tmpToLearn/SDMet2/');  % TODO VERIFICAR
pathAplicacionSiluetas=fullfile(pathAplicacion,'sFrutas/'); % TODO VERIFICAR
outputPath=fullfile(mainPath,'output/'); % se guardan los resultados
imageExtension='*.jpg';

%% Configuration file names work with methods for equivalence with the 4 views
configurationFile=fullfile(configurationPath,'20170916configuracion.xml'); % for initial coordinates in image processing
calibrationFile=fullfile(configurationPath,'20170916calibracion.xml'); % to indicate to the user in the final part of the calibration
  
%% Definicion de los cuadros, según numeración 
row01=readConfiguration('Fila1', configurationFile);
bottomRow=readConfiguration('FilaAbajo', configurationFile);

% Rectangle 1 downside
rectangle1_Y=readConfiguration('Cuadro1_lineaGuiaInicialFila', configurationFile);
rectangle1_X=readConfiguration('Cuadro1_lineaGuiaInicialColumna', configurationFile);
rectangle1_H=readConfiguration('Cuadro1_espacioFila', configurationFile);
rectangle1_W=readConfiguration('Cuadro1_espacioColumna', configurationFile);

% Rectangle 2 left side
Cuadro2_lineaGuiaInicialFila=readConfiguration('Cuadro2_lineaGuiaInicialFila', configurationFile);
Cuadro2_lineaGuiaInicialColumna=readConfiguration('Cuadro2_lineaGuiaInicialColumna', configurationFile);
Cuadro2_espacioFila=readConfiguration('Cuadro2_espacioFila', configurationFile);
Cuadro2_espacioColumna=readConfiguration('Cuadro2_espacioColumna', configurationFile);

% Rectangle 3 center
Cuadro3_lineaGuiaInicialFila=readConfiguration('Cuadro3_lineaGuiaInicialFila', configurationFile);
Cuadro3_lineaGuiaInicialColumna=readConfiguration('Cuadro3_lineaGuiaInicialColumna', configurationFile);
Cuadro3_espacioFila=readConfiguration('Cuadro3_espacioFila', configurationFile);
Cuadro3_espacioColumna=readConfiguration('Cuadro3_espacioColumna', configurationFile);

% Rectangle 4 right side
Cuadro4_lineaGuiaInicialFila=readConfiguration('Cuadro4_lineaGuiaInicialFila', configurationFile);
Cuadro4_lineaGuiaInicialColumna=readConfiguration('Cuadro4_lineaGuiaInicialColumna', configurationFile);
Cuadro4_espacioFila=readConfiguration('Cuadro4_espacioFila', configurationFile);
Cuadro4_espacioColumna=readConfiguration('Cuadro4_espacioColumna', configurationFile);

%%carga en memoria para que sea mas rapido
ArrayCuadros=[rectangle1_X, rectangle1_Y, rectangle1_W, rectangle1_H;
Cuadro2_lineaGuiaInicialColumna, Cuadro2_lineaGuiaInicialFila, Cuadro2_espacioColumna, Cuadro2_espacioFila;
Cuadro3_lineaGuiaInicialColumna, Cuadro3_lineaGuiaInicialFila, Cuadro3_espacioColumna, Cuadro3_espacioFila;
Cuadro4_lineaGuiaInicialColumna, Cuadro4_lineaGuiaInicialFila, Cuadro4_espacioColumna, Cuadro4_espacioFila;
0,0,0,0
];

%% CONFIGURACIONES DE PROCESAMIENTO DE IMAGENES
areaObjetosRemoverBR=5000; % para siluetas y detección de objetos. Tamaño para realizar granulometria
% configuracion de umbrales
canalLMin = 0.0; canalLMax = 96.653; canalAMin = -23.548; canalAMax = 16.303; canalBMin = -28.235; canalBMax = -1.169; %parametros de umbralizacion de fondo


%% CONFIGURACIONES PARA DETECCION DE DEFECTOS
tamanoManchas=1000; %se utiliza para extracción de contornos. Los contornos se encuentran arriba de 1000 pixeles
archivoVectorDef=strcat(outputPath,'aCandidatos.csv'); %archivo de salida candidatos a defectos

% ----- FIN Definicion de topes
%% Remover archivos antiguos, borrar archivos antiguos
fprintf('LIMPIANDO IMAGENES ANTIGUAS \n');
removeFiles(archivoVectorDef);
removeFiles(strcat(pathAplicacion,'sFrutas/','*.jpg'));
removeFiles(strcat(pathAplicacion,'sDefectos/','*.jpg'));
removeFiles(strcat(pathAplicacion,'roi/','*.jpg'));
removeFiles(strcat(pathAplicacion,'removido/','*.jpg'));
removeFiles(strcat(pathAplicacion,'deteccion/','*.jpg'));
removeFiles(strcat(pathAplicacion,'defectos/','*.jpg'));
removeFiles(strcat(pathAplicacion,'contornos/','*.jpg'));
removeFiles(strcat(pathAplicacion,'cDefectos/','*.jpg'));
removeFiles(strcat(pathAplicacion,'br/','*.jpg'));


%% --------------------------------------------------------------------
%% Reading training folder with images. Iterates over images
imageList=dir(fullfile(pathImages,imageExtension));
imageNameP='nombreImagenP';
listSize=size(imageList);
imageCount=listSize(1);
%% bach-shaped reading of the camera directory
for n=1:imageCount
    fprintf('Extracting features for training-> %s \n',imageList(n).name); 
    imageNameP=imageList(n).name;
    ProcessImgSoft(pathImages, pathAplicacion, imageNameP, ArrayCuadros, areaObjetosRemoverBR, canalLMin, canalLMax, canalAMin, canalAMax, canalBMin, canalBMax );
    ExtractDefDetectImgSoftSDMet2(pathImages, pathAplicacion, imageNameP, archivoVectorDef, tamanoManchas);
    %if n==1
    %    break;
    %end %if n==11
end %

%total=size(listado);

fprintf('\n -------------------------------- \n');
fprintf('Se procesaron un total de %i archivos \n',n);
fprintf('\n -------------------------------- \n');
